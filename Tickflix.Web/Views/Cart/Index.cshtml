@model List<Tickflix.Models.CartItem>

@{
    ViewData["Title"] = "Your Shopping Cart";
} 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Shopping Cart</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      background: #f8f8f8;
      padding: 40px;
    }

    .container {
      display: flex;
      justify-content: space-between;
      max-width: 1200px;
      margin: auto;
      gap: 20px;
    }

    table {
      width: 100%;
      background: white;
      border-collapse: collapse;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    th, td {
      padding: 15px;
      text-align: center;
      border-bottom: 1px solid #eee;
    }

    th {
      background-color: #f2f2f2;
    }

    .product-img {
      width: 50px;
      height: auto;
    }

    .qty-controls button {
      padding: 5px 10px;
      background-color: #d99d96;
      border: none;
      color: white;
      font-size: 16px;
      cursor: pointer;
    }

    .remove-btn {
      background-color: #b14c4c;
      border: none;
      color: white;
      padding: 5px 10px;
      cursor: pointer;
    }

    .summary {
      width: 300px;
      background: white;
      padding: 20px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .summary h3 {
      margin-bottom: 20px;
    }

    .summary-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 10px;
    }

    .checkout-btn {
      background-color: #d99d96;
      color: white;
      padding: 15px;
      width: 100%;
      text-align: center;
      border: none;
      cursor: pointer;
      font-size: 16px;
      margin-top: 20px;
    }

    input[type="text"] {
      width: calc(100% - 110px);
      padding: 10px;
      margin-right: 10px;
    }

    .coupon {
      display: flex;
      margin-bottom: 20px;
    }

    .apply-btn {
      padding: 10px;
      background: #d99d96;
      color: white;
      border: none;
      cursor: pointer;
    }
  </style>
</head>
<body>

<div class="container">
  <div style="flex: 1">
    <table>
      <thead>
        <tr>
          <th>Products</th>
          <th>Price</th>
          <th>Quantity</th>
          <th>Total</th>
          <th>Remove</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><img src="https://via.placeholder.com/50" class="product-img" alt="Product"></td>
          <td>$150</td>
          <td class="qty-controls">
            <button>-</button>
            1
            <button>+</button>
          </td>
          <td>$150</td>
          <td><button class="remove-btn">X</button></td>
        </tr>
        <!-- Diğer ürünler buraya -->
      </tbody>
    </table>
  </div>

  <div class="summary">
    <div class="coupon">
      <input type="text" placeholder="Coupon Code"/>
      <button class="apply-btn">Apply Coupon</button>
    </div>

    <h3>Cart Summary</h3>
    <div class="summary-row">
      <span>Subtotal</span>
      <span>$150</span>
    </div>
    <div class="summary-row">
      <span>Shipping</span>
      <span>$10</span>
    </div>
    <div class="summary-row" style="font-weight: bold;">
      <span>Total</span>
      <span>$160</span>
    </div>

    <button class="checkout-btn">Proceed To Checkout</button>
  </div>
</div>

</body>
</html>



<script>
    document.addEventListener('DOMContentLoaded', function () {
      // Quantity increase/decrease
      document.querySelectorAll('.qty-controls').forEach(function (control) {
        const minusBtn = control.querySelector('button:first-child');
        const plusBtn = control.querySelector('button:last-child');
        let qtySpan = control.childNodes[2]; // "1" metni

        minusBtn.addEventListener('click', function () {
          let qty = parseInt(qtySpan.textContent.trim());
          if (qty > 1) {
            qty--;
            qtySpan.textContent = ' ' + qty + ' ';
            // TODO: Backend'e güncel miktarı gönderin
          }
        });

        plusBtn.addEventListener('click', function () {
          let qty = parseInt(qtySpan.textContent.trim());
          qty++;
          qtySpan.textContent = ' ' + qty + ' ';
          // TODO: Backend'e güncel miktarı gönderin
        });
      });

      // Remove item
      document.querySelectorAll('.remove-btn').forEach(function (btn) {
        btn.addEventListener('click', function () {
          const row = btn.closest('tr');
          row.remove();
          // TODO: Backend'den ürünü silin ve toplamları güncelleyin
        });
      });

      // Apply coupon
      document.querySelector('.apply-btn').addEventListener('click', function () {
        const code = document.querySelector('.coupon input').value.trim();
        if (code) {
          // TODO: Kupon kodunu backend'e gönderin ve sonucu işleyin
          alert('Coupon "' + code + '" applied (demo)');
        }
      });
    });
</script>